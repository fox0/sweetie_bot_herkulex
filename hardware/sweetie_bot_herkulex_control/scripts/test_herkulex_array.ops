# TEST HERKULEX_ARRAY
#
# Set trajectory via CM interface?
# store position and statistics to files:
#
#     state.out (herkulex srvos state)
#     statistics.out (package statistics)

import("rtt_ros");
ros.import("rtt_rospack");

var string HERKULEX_SCRIPTS = ros.find("sweetie_bot_herkulex_control") + "/scripts/"

# LOAD LOGGER
ros.import("sweetie_bot_logger");

require("log4cpp"); # add log4cpp service
log4cpp.default_root_category = "sweetie_bot.motion";
log4cpp.configure(HERKULEX_SCRIPTS + "herkulex_control.log4cpp"); # load configuration from file

# LOAD HERKULEX_* SUBSYSTEM
runScript(HERKULEX_SCRIPTS + "herkulex_array_conf.ops");

# TEST SEQUENCEA

herk_array.printAllServoStatuses();
herk_array.printAllRegistersRAM("servo1");

herk_array.publishJointStates();
herk_array.out_joints.last

herk_array.setRegisterRAM("servo1", "led_control", 7);

herk_array.discoverServos();
